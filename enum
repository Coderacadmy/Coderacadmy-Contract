pragma solidity ^0.7.0;

contract Order{
    
    // enum STATE{ INACTIVE, ACTIVE, PRO, CAN}
    // STATE state;
    
    // struct User{
    //     STATE state;
    // }
    
    // function setToActive() external {
    //     state = STATE.ACTIVE;
    // }
    
    // function foo(STATE _state) external{
    //     state = STATE.INACTIVE;
    // }
    
    
    
    
    
    
    
    
    
    // enum Status{
    //     Pending,
    //     Shipped,
    //     Accepted,
    //     Rejected,
    //     Canceled
    // }
    
    // Status status;
    
    // function ship() public{
    //     require(status == Status.Pending);
    //     status = Status.Shipped;
    // }
    
    // function acceptDelivery() public{
    //     require(status == Status.Shipped);
    //     status = Status.Accepted;
        
    // }
    
    // function rejectDelivery() public{
    //     require(status == Status.Shipped);
    //     status = Status.Rejected;
        
    // }
    
    // function cancel() public{
    //     require(status == Status.Pending);
    //     status = Status.Canceled;
        
    // }
    
    
//     enum ASDF{
//         class,
//         id,
//         number
//     }
    
//     ASDF public asdf;
    
//     function boy(ASDF _asdf) public {
//         asdf = ASDF.class;
        
        
//     }


    enum week_days{
        Sunday,
        monday,
        tuesday,
        wednesday,
        thursday,
        friday,
        saturday
    }
    
    week_days week;
    week_days choice;
    
    week_days constant default_value = week_days.Sunday;
    
    function set_values() public{
        choice = week_days.Sunday;
    }

    function return_values() public view returns(week_days){
        return choice;
    }
    
    function getDefaultValues() public pure returns(week_days){
        return default_value;
    }







}
